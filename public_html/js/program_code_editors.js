let codeEditors=[{name:name="Sublime Text",desc:desc="The sophisticated text editor for code, markup and prose.",icon:icon="assets/img/sublimeTextLogo.svg",links:links=[{href:href="https://www.sublimetext.com/download",text:text="Download Sublime Text",title:title="Visit the download page of Sublime Text",target:target="_blank"},{href:href="https://docs.sublimetext.io/",text:text="Sublime Text Community Documentation",title:title="Read the community effort at documenting the Sublime Text",target:target="_blank"}],configs:configs=[{title:title="Sublime text context menu icon",desc:desc='To add <q>Open with Sublime Text</q> context menu option and icon, open PowerShell with administrative rights and paste the next code. Remember to change the path in <code class="inline">$st_path = "C:\\path\\to\\sublime_text_folder\\sublime_text.exe"</code> to your Sublime Text installation path into quotes',code:code="$st_path = \"C:\\path\\to\\sublime_text_folder\\sublime_text.exe\"<br><br>$reg_path = 'Registry::HKEY_CLASSES_ROOT\\*\\shell';Set-Location -LiteralPath $reg_path;new-Item 'sublimeText' | Out-Null;$reg_path = $reg_path + '\\sublimeText';Set-Location -LiteralPath $reg_path;New-ItemProperty -literalPath $reg_path -Name '(Default)' -Value 'Open with Sublime text' | Out-Null;New-ItemProperty -literalPath $reg_path -Name 'Icon' -Value `\"$st_path`\" | Out-Null;new-Item 'command' | Out-Null;$reg_path = $reg_path + '\\command';Set-Location -LiteralPath $reg_path;$val_path = \"`\"\" + $st_path + \"`\" `\"%1`\"\";New-ItemProperty -literalPath $reg_path -Name '(Default)' -Value $val_path | Out-Null"},{title:title="Disable Sublime Text updates",desc:desc="To disable Sublime Text updates you need to add a firewall rule. Use a powershell with administrative privileges and type the next code. Remember to change the path in <q>-Program</q> option for your Sublime Text installation path",code:code="New-NetFirewallRule -Action Block -Name 'Sublime Update Block' -Enabled True -Direction Outbound -DisplayName 'Sublime Text Update Block' -Description 'Block Licensce update check for Sublime text' -Protocol Any -Profile Any -Program \"C:\\Program Files\\{sublime_text_folder}\\sublime_text.exe\""}]},{name:name="Visual Studio Code ",desc:desc="Visual Studio Code is a code editor redefined and optimized for building and debugging modern web and cloud applications.",icon:icon="assets/img/vscodeLogo.svg",links:links=[{href:href="https://code.visualstudio.com/download",text:text="Download Visual Studio Code",title:title="Visit Visual Studio Code download page",target:target="_blank"},{href:href="https://marketplace.visualstudio.com/vscode",text:text="Visual Studio Code extensions market place",title:title="Visit the market place extensions for Visual Studio Code",target:target="_blank"}],configs:configs=[{title:title="Configuration file",desc:desc="These are some configurations that you can use to get better experience with VSCode. You can configure Visual Studio Code from a JSON format file <code>settings.json</code> pressing <kbd>Ctrl</kbd> + <kbd>P</kbd> and typing <code>&gt;Preferences: Open Settings (JSON)</code>."},{title:title="Format On Paste",desc:desc="Force VS Code to format text whenever its pasted into a file (requires a formatter, \t\tsuch as Prettier or Beautify)",code:code='"editor.formatOnPaste": true,'},{title:title="Format On Save",desc:desc="Force VS Code to format text when file is saved (requires a formatter, such as Prettier or Beautify)",code:code='"editor.formatOnSave": true,'},{title:title="Accept Suggestion On Enter",desc:desc="Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change",code:code='"editor.acceptSuggestionOnEnter":"off",'},{title:title="Mouse Wheel Zoom",desc:desc="Enable window zooming using <kbd>Ctrl</kbd> + <kbd>Mouse wheel</kbd> (up or down)",code:code='"editor.mouseWheelZoom": true,'},{title:title="Cursor Move Smooth Animation",desc:desc="Use smooth transition in cursor movements",code:code='"editor.cursorSmoothCaretAnimation": true,'},{title:title="Trim Final Newlines",desc:desc="Remove all final empty lines from a file on save",code:code='"files.trimFinalNewlines": true,'},{title:title="Insert Final Newline",desc:desc="Insert a final empty line at every files on save",code:code='"files.insertFinalNewline": true,'},{title:title="Starts Visual Studio witouth any tab",desc:desc="Controls which editor is shown at startup, if none are restored from the previous session.",code:code='"workbench.editor.showTabs": true,'},{title:title="Highlight Modified Tabs",desc:desc="Controls whether a top blue border is drawn on modified (dirty) editor tabs not saved or not. This value is ignored when <code>workbench.editor.showTabs</code> is disabled.",code:code='"workbench.editor.highlightModifiedTabs": true,'},{title:title="Enable tabs",desc:desc="Controls whether opened editors should show in tabs or not",code:code='"workbench.startupEditor": "none",'},{title:title="Powershell run buttons",desc:desc="Show the Run and Run Selection buttons in the editor titlebar to test powershell scripts.",code:code='"Powershell.buttons.showPanelMovementButtons": true,'}]}];function addCodeEditors(destination){let dest=document.querySelector(destination);for(var editor of Object.values(codeEditors)){for(link of(editorContainer=document.createElement("article"),editorHeader=document.createElement("header"),editorLink=document.createElement("a"),editorLink.href=editor.links[0].href,editorLink.title="Visit "+editor.name+"download page",editorLink.target=editor.links[0].target,editorTitle=document.createElement("h2"),editorTitle.innerHTML=editor.name,editorLogoContainer=document.createElement("span"),editorLogoContainer.className="logo inline",editorLogo=document.createElement("img"),editorLogo.src=editor.icon,editorLogo.title=editor.name+" logo",editorLogoContainer.appendChild(editorLogo),editorLink.appendChild(editorTitle),editorLink.appendChild(editorLogoContainer),editorHeader.appendChild(editorLink),editorDesc=document.createElement("p"),editorDesc.innerHTML=editor.desc,linksDescP=document.createElement("h3"),linksDescP.innerHTML="Useful links for "+editor.name,linksListContainer=document.createElement("ul"),Object.values(editor.links)))linkContainer=document.createElement("li"),linkTag=document.createElement("a"),linkTag.href=link.href,linkTag.innerHTML=link.text,linkTag.title=link.title,linkTag.target=link.target,linkContainer.appendChild(linkTag),linksListContainer.appendChild(linkContainer);if(configsDescP=document.createElement("h3"),configsDescP.innerHTML="Some configurations for "+editor.name,void 0!==editor.configs&&"object"==typeof editor.configs)for(config of(configsContainer=document.createElement("ul"),Object.values(editor.configs)))configDataContainer=document.createElement("li"),void 0!==config.title&&"string"==typeof config.title&&(configTitle=document.createElement("h4"),configTitle.innerHTML=config.title,configDataContainer.appendChild(configTitle)),configDesc=document.createElement("p"),configDesc.innerHTML=config.desc,configDataContainer.appendChild(configDesc),void 0!==config.code&&"string"==typeof config.code&&(configCode=document.createElement("code"),configCode.className="oneline",configCode.innerHTML=config.code,configDataContainer.appendChild(configCode)),configsContainer.appendChild(configDataContainer);editorContainer.appendChild(editorHeader),editorContainer.appendChild(editorDesc),editorContainer.appendChild(linksDescP),editorContainer.appendChild(linksListContainer),editorContainer.appendChild(configsDescP),editorContainer.appendChild(configsContainer),dest.appendChild(editorContainer)}}